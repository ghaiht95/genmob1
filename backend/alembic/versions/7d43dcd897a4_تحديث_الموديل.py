"""تحديث الموديل

Revision ID: 7d43dcd897a4
Revises: fe2ab63511d9
Create Date: 2025-05-24 23:51:27.237297

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '7d43dcd897a4'
down_revision = 'fe2ab63511d9'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('user',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(length=80), nullable=False),
    sa.Column('email', sa.String(length=120), nullable=False),
    sa.Column('password_hash', sa.String(length=128), nullable=False),
    sa.Column('verification_code', sa.String(length=10), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('vpn_ip', sa.String(length=15), nullable=True),
    sa.Column('vpn_mac', sa.String(length=17), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_user_email'), 'user', ['email'], unique=True)
    op.create_index(op.f('ix_user_username'), 'user', ['username'], unique=True)
    op.create_table('room',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('owner_username', sa.String(length=100), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('is_private', sa.Boolean(), nullable=True),
    sa.Column('password', sa.String(length=100), nullable=True),
    sa.Column('max_players', sa.Integer(), nullable=True),
    sa.Column('current_players', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('vpn_hub', sa.String(length=100), nullable=True),
    sa.Column('vpn_username', sa.String(length=100), nullable=True),
    sa.Column('vpn_password', sa.String(length=100), nullable=True),
    sa.Column('server_ip', sa.String(length=100), nullable=True),
    sa.Column('port', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['owner_username'], ['user.username'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_room_name'), 'room', ['name'], unique=True)
    op.create_index(op.f('ix_room_owner_username'), 'room', ['owner_username'], unique=False)
    op.create_table('chat_message',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('room_id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(length=100), nullable=False),
    sa.Column('message', sa.Text(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['room_id'], ['room.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['username'], ['user.username'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_chat_message_id'), 'chat_message', ['id'], unique=False)
    op.create_index(op.f('ix_chat_message_room_id'), 'chat_message', ['room_id'], unique=False)
    op.create_index(op.f('ix_chat_message_username'), 'chat_message', ['username'], unique=False)
    op.drop_index('ix_wireguard_networks_id', table_name='wireguard_networks')
    op.drop_table('wireguard_networks')
    op.drop_index('ix_messages_id', table_name='messages')
    op.drop_table('messages')
    op.drop_index('ix_users_email', table_name='users')
    op.drop_index('ix_users_id', table_name='users')
    op.drop_index('ix_users_username', table_name='users')
    op.drop_table('users')
    op.drop_index('ix_wireguard_configs_id', table_name='wireguard_configs')
    op.drop_table('wireguard_configs')
    op.drop_index('ix_rooms_id', table_name='rooms')
    op.drop_index('ix_rooms_name', table_name='rooms')
    op.drop_table('rooms')
    op.drop_constraint('friendship_friend_id_fkey', 'friendship', type_='foreignkey')
    op.drop_constraint('friendship_user_id_fkey', 'friendship', type_='foreignkey')
    op.create_foreign_key(None, 'friendship', 'user', ['user_id'], ['id'])
    op.create_foreign_key(None, 'friendship', 'user', ['friend_id'], ['id'])
    op.drop_constraint('room_player_room_id_fkey', 'room_player', type_='foreignkey')
    op.drop_constraint('room_player_player_username_fkey', 'room_player', type_='foreignkey')
    op.create_foreign_key(None, 'room_player', 'room', ['room_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key(None, 'room_player', 'user', ['player_username'], ['username'])
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'room_player', type_='foreignkey')
    op.drop_constraint(None, 'room_player', type_='foreignkey')
    op.create_foreign_key('room_player_player_username_fkey', 'room_player', 'users', ['player_username'], ['username'])
    op.create_foreign_key('room_player_room_id_fkey', 'room_player', 'rooms', ['room_id'], ['id'], ondelete='CASCADE')
    op.drop_constraint(None, 'friendship', type_='foreignkey')
    op.drop_constraint(None, 'friendship', type_='foreignkey')
    op.create_foreign_key('friendship_user_id_fkey', 'friendship', 'users', ['user_id'], ['id'])
    op.create_foreign_key('friendship_friend_id_fkey', 'friendship', 'users', ['friend_id'], ['id'])
    op.create_table('rooms',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('rooms_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('host_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('is_active', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.Column('max_players', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('game_type', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('password', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('description', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('is_private', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('current_players', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('owner_username', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['host_id'], ['users.id'], name='rooms_host_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='rooms_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_index('ix_rooms_name', 'rooms', ['name'], unique=False)
    op.create_index('ix_rooms_id', 'rooms', ['id'], unique=False)
    op.create_table('wireguard_configs',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('network_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('client_name', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('client_public_key', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('client_private_key', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('client_ip', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('allowed_ips', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['network_id'], ['wireguard_networks.id'], name='wireguard_configs_network_id_fkey'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='wireguard_configs_user_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='wireguard_configs_pkey'),
    sa.UniqueConstraint('network_id', 'client_ip', name='uix_network_client_ip'),
    sa.UniqueConstraint('network_id', 'client_name', name='uix_network_client_name')
    )
    op.create_index('ix_wireguard_configs_id', 'wireguard_configs', ['id'], unique=False)
    op.create_table('users',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('users_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('username', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('email', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('hashed_password', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('verification_code', sa.VARCHAR(length=10), autoincrement=False, nullable=True),
    sa.Column('is_active', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('wireguard_public_key', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('wireguard_private_key', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='users_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_index('ix_users_username', 'users', ['username'], unique=False)
    op.create_index('ix_users_id', 'users', ['id'], unique=False)
    op.create_index('ix_users_email', 'users', ['email'], unique=False)
    op.create_table('messages',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('content', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('room_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['room_id'], ['rooms.id'], name='messages_room_id_fkey'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='messages_user_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='messages_pkey')
    )
    op.create_index('ix_messages_id', 'messages', ['id'], unique=False)
    op.create_table('wireguard_networks',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('room_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('network_name', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('network_address', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('server_public_key', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('server_private_key', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('server_endpoint', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('dns_servers', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['room_id'], ['rooms.id'], name='wireguard_networks_room_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='wireguard_networks_pkey'),
    sa.UniqueConstraint('room_id', name='wireguard_networks_room_id_key')
    )
    op.create_index('ix_wireguard_networks_id', 'wireguard_networks', ['id'], unique=False)
    op.drop_index(op.f('ix_chat_message_username'), table_name='chat_message')
    op.drop_index(op.f('ix_chat_message_room_id'), table_name='chat_message')
    op.drop_index(op.f('ix_chat_message_id'), table_name='chat_message')
    op.drop_table('chat_message')
    op.drop_index(op.f('ix_room_owner_username'), table_name='room')
    op.drop_index(op.f('ix_room_name'), table_name='room')
    op.drop_table('room')
    op.drop_index(op.f('ix_user_username'), table_name='user')
    op.drop_index(op.f('ix_user_email'), table_name='user')
    op.drop_table('user')
    # ### end Alembic commands ### 